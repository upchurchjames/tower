{"ast":null,"code":"var _jsxFileName = \"/Users/jamesupchurch/Documents/projects/tower/client/src/components/app/navBar/NavBar.js\";\n// Navigation Menu\nimport { React, Component } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport clsx from 'clsx';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from '../home';\nimport MyDataSets from '../mydatasets';\nimport Settings from '../settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n});\n\nconst routes = [{\n  path: '/Home',\n  exact: true,\n  navBar: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 23\n  }, this),\n  main: () => /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 21\n  }, this)\n}, {\n  path: '/My Data Sets',\n  exact: true,\n  navBar: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"My Data Sets\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 23\n  }, this),\n  main: () => /*#__PURE__*/_jsxDEV(MyDataSets, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 21\n  }, this)\n}, {\n  path: '/Settings',\n  exact: true,\n  navBar: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Settings\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 23\n  }, this),\n  main: () => /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 21\n  }, this)\n}];\n\nclass NavBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isDrawerOpen: false,\n      openForm: 'Home'\n    };\n\n    this.toggleDrawer = () => {\n      this.setState({\n        isDrawerOpen: !this.state.isDrawerOpen\n      });\n    };\n\n    this.openForm = index => {\n      switch (index) {\n        case 0:\n          this.setState({\n            openForm: 'Home'\n          });\n          break;\n\n        case 1:\n          this.setState({\n            openForm: 'MyDataSets'\n          });\n          break;\n\n        case 2:\n          this.setState({\n            openForm: 'Settings'\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.renderContent = () => {\n      switch (this.state.openForm) {\n        case 'MyDataSets':\n          return /*#__PURE__*/_jsxDEV(MyDataSets, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 24\n          }, this);\n\n        case 'Settings':\n          return /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 24\n          }, this);\n\n        case 'Home':\n        default:\n          return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 24\n          }, this);\n      }\n    };\n\n    this.renderNavIcon = index => {\n      switch (index) {\n        case 0:\n          return /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 30\n          }, this);\n\n        case 1:\n          return /*#__PURE__*/_jsxDEV(DashboardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 30\n          }, this);\n\n        case 2:\n          return /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 30\n          }, this);\n\n        default:\n          return;\n      }\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const open = this.state.isDrawerOpen;\n    const forms = ['Home', 'My Data Sets', 'Settings'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(AppBar, {\n          position: \"fixed\",\n          className: clsx(classes.appBar, {\n            [classes.appBarShift]: open\n          }),\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"inherit\",\n              onClick: this.toggleDrawer,\n              edge: \"start\",\n              className: clsx(classes.menuButton, {\n                [classes.hide]: open\n              }),\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              noWrap: true,\n              children: this.state.openForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          variant: \"permanent\",\n          className: clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open\n          }),\n          classes: {\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open\n            })\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.toolbar,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: this.toggleDrawer,\n              children: /*#__PURE__*/_jsxDEV(ChevronLeft, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: forms.map((text, index) => /*#__PURE__*/_jsxDEV(Link, {\n              to: '/' + text,\n              style: {\n                color: 'black',\n                textDecoration: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: [\" \", this.renderNavIcon(index), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.toolbar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: routes.map((route, index) => /*#__PURE__*/_jsxDEV(Route, {\n              path: route.path,\n              exact: route.exact,\n              children: /*#__PURE__*/_jsxDEV(route.main, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 47\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(NavBar);","map":{"version":3,"sources":["/Users/jamesupchurch/Documents/projects/tower/client/src/components/app/navBar/NavBar.js"],"names":["React","Component","Drawer","withStyles","IconButton","List","ListItem","ListItemIcon","ListItemText","ChevronLeft","MenuIcon","HomeIcon","DashboardIcon","SettingsIcon","clsx","AppBar","Toolbar","Typography","BrowserRouter","Router","Switch","Route","Link","Home","MyDataSets","Settings","drawerWidth","styles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","routes","path","exact","navBar","main","NavBar","state","isDrawerOpen","openForm","toggleDrawer","setState","index","renderContent","renderNavIcon","render","classes","props","open","forms","paper","map","text","color","textDecoration","route","withTheme"],"mappings":"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","sourcesContent":["// Navigation Menu\n\nimport { React, Component } from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport { withStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HomeIcon from '@material-ui/icons/Home'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport clsx from 'clsx'\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from '../home'\nimport MyDataSets from '../mydatasets'\nimport Settings from '../settings'\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  }\n});\n\nconst routes = [\n    {  \n        path: '/Home',\n        exact: true,\n        navBar: () => <div>Home</div>,\n        main: () => <Home /> \n    },\n    {\n        path: '/My Data Sets',\n        exact: true,\n        navBar: () => <div>My Data Sets</div>,\n        main: () => <MyDataSets />\n    },\n    {\n        path: '/Settings',\n        exact: true,\n        navBar: () => <div>Settings</div>,\n        main: () => <Settings />\n    }\n];\n\nclass NavBar extends Component {    \n    state = {\n        isDrawerOpen: false,\n        openForm: 'Home'\n    }\n\n    toggleDrawer = () => {\n        this.setState({isDrawerOpen: !this.state.isDrawerOpen})\n    }\n\n    openForm = (index) => {\n        switch(index) {\n            case 0:\n                this.setState({ openForm: 'Home' });\n                break;\n            case 1:\n                this.setState({ openForm: 'MyDataSets' });\n                break;\n            case 2:\n                this.setState({ openForm: 'Settings' });\n                break;\n            default:\n                break;\n        }\n    }\n\n    renderContent = () => {\n        switch(this.state.openForm) {\n            case 'MyDataSets':\n                return <MyDataSets />;\n            case 'Settings':\n                return <Settings />;\n            case 'Home':\n            default:\n                return <Home />;\n        }\n    }\n\n    renderNavIcon = (index) => {\n        switch(index) {\n            case 0: return ( <HomeIcon /> );\n            case 1: return ( <DashboardIcon /> );\n            case 2: return ( <SettingsIcon /> );\n            default: return;\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const open = this.state.isDrawerOpen;\n\n        const forms = [\n            'Home',\n            'My Data Sets',\n            'Settings'\n        ];\n\n        return (\n            <div className={classes.root}>\n                <Router>\n                    <AppBar\n                        position=\"fixed\"\n                        className={clsx(classes.appBar, {\n                            [classes.appBarShift]: open,\n                        })}\n                    >\n                        <Toolbar>\n                            <IconButton\n                                color=\"inherit\"\n                                onClick={this.toggleDrawer}\n                                edge=\"start\"\n                                className={clsx(classes.menuButton, {\n                                    [classes.hide]: open,\n                                })}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" noWrap>\n                                {this.state.openForm}\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <Drawer\n                        variant=\"permanent\"\n                        className={clsx(classes.drawer, {\n                            [classes.drawerOpen]: open,\n                            [classes.drawerClose]: !open,\n                        })}\n                        classes={{\n                            paper: clsx({\n                                [classes.drawerOpen]: open,\n                                [classes.drawerClose]: !open,\n                            }),\n                        }}\n                    >\n                        <div className={classes.toolbar}>\n                            <IconButton onClick={this.toggleDrawer}>\n                                <ChevronLeft />\n                            </IconButton>\n                        </div>\n                        <List>\n                            {forms.map((text, index) => (\n                                <Link to={'/' + text} style={{ color: 'black', textDecoration: 'none'}} key={index}>\n                                    <ListItem>\n                                        <ListItemIcon> {this.renderNavIcon(index)} </ListItemIcon>\n                                        <ListItemText primary={text} />\n                                    </ListItem>\n                                </Link>\n                            ))}\n                        </List>\n\n                    </Drawer>\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        <Switch>\n                            {routes.map((route, index) => (\n                                <Route \n                                    key={index}\n                                    path={route.path}\n                                    exact={route.exact}\n                                    children={<route.main />}\n                                />\n                            ))}\n                        </Switch>\n                    </main>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(NavBar);\n"]},"metadata":{},"sourceType":"module"}