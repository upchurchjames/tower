{"ast":null,"code":"var _jsxFileName = \"/Users/jamesupchurch/Documents/projects/tower/client/src/components/app/navBar/NavBar.js\";\n// Navigation Menu\nimport { React, Component } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport clsx from 'clsx';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n});\n\nclass NavBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isDrawerOpen: false,\n      openForm: 'Home'\n    };\n\n    this.toggleDrawer = () => {\n      this.setState({\n        isDrawerOpen: !this.state.isDrawerOpen\n      });\n    };\n\n    this.renderNavIcon = index => {\n      switch (index) {\n        case 0:\n          return /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 30\n          }, this);\n\n        case 1:\n          return /*#__PURE__*/_jsxDEV(DashboardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 30\n          }, this);\n\n        case 2:\n          return /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 30\n          }, this);\n      }\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const open = this.state.isDrawerOpen;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        className: clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        }),\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: this.toggleDrawer,\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        variant: \"permanent\",\n        className: clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open\n        }),\n        classes: {\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open\n          })\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.toolbar,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: this.toggleDrawer,\n            children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: ['Home', 'My Data Sets', 'Settings'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: [\" \", this.renderNavIcon(index), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this)]\n          }, text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(NavBar);","map":{"version":3,"sources":["/Users/jamesupchurch/Documents/projects/tower/client/src/components/app/navBar/NavBar.js"],"names":["React","Component","Drawer","withStyles","Divider","IconButton","List","ListItem","ListItemIcon","ListItemText","MenuIcon","HomeIcon","DashboardIcon","SettingsIcon","clsx","AppBar","Toolbar","Typography","drawerWidth","styles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","NavBar","state","isDrawerOpen","openForm","toggleDrawer","setState","renderNavIcon","index","render","classes","props","open","paper","map","text","withTheme"],"mappings":"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","sourcesContent":["// Navigation Menu\n\nimport { React, Component } from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HomeIcon from '@material-ui/icons/Home'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport clsx from 'clsx'\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n});\n\nclass NavBar extends Component {    \n    state = {\n        isDrawerOpen: false,\n        openForm: 'Home'\n    }\n\n    toggleDrawer = () => {\n        this.setState({isDrawerOpen: !this.state.isDrawerOpen})\n    }\n\n    renderNavIcon = (index) => {\n        switch(index) {\n            case 0: return ( <HomeIcon /> );\n            case 1: return ( <DashboardIcon /> );\n            case 2: return ( <SettingsIcon /> );\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const open = this.state.isDrawerOpen;\n\n        return (\n            <div>\n                <AppBar\n                  position=\"fixed\"\n                  className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                  })}>\n                  <Toolbar>\n                    <IconButton onClick={this.toggleDrawer}>\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                      Home\n                    </Typography>\n                  </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    className={clsx(classes.drawer, {\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    })}\n                    classes={{\n                        paper: clsx({\n                            [classes.drawerOpen]: open,\n                            [classes.drawerClose]: !open,\n                        }),\n                    }}\n                >\n                    <div className={classes.toolbar}>\n                      <IconButton onClick={this.toggleDrawer}>\n                        <Menu />\n                      </IconButton>\n                    </div>\n                    <Divider />\n                    <List>\n                        {['Home', 'My Data Sets', 'Settings'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon> {this.renderNavIcon(index)} </ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(NavBar);\n"]},"metadata":{},"sourceType":"module"}